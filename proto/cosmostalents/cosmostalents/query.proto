syntax = "proto3";

package cosmostalents.cosmostalents;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmostalents/cosmostalents/params.proto";
import "cosmostalents/cosmostalents/info.proto";

option go_package = "github.com/cosmos-talents/cosmos-talents/x/cosmostalents/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmos-talents/cosmos-talents/cosmostalents/params";
  
  }
  
  // Queries a list of SayHello items.
  rpc SayHello (QuerySayHelloRequest) returns (QuerySayHelloResponse) {
    option (google.api.http).get = "/cosmos-talents/cosmos-talents/cosmostalents/say_hello/{name}";
  
  }
  
  // Queries a Info by index.
  rpc Info (QueryGetInfoRequest) returns (QueryGetInfoResponse) {
    option (google.api.http).get = "/cosmos-talents/cosmos-talents/cosmostalents/info";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QuerySayHelloRequest {
  string name = 1;
}

message QuerySayHelloResponse {
  string name = 1;
}

message QueryGetInfoRequest {}

message QueryGetInfoResponse {
  Info Info = 1 [(gogoproto.nullable) = false];
}

